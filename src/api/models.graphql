type User {
  id: ID!
  email: String!
  username: String!
  password: String!
  firstName: String!
  lastName: String!
  birthDay: String!
  address: String!
  addressDetail: String!
  department: Department!
  rank: Rank!
  chats: [Chat!]!
  basePay: Int!
  createdAt: String!
  updatedAt: String!
  loggedInAt: String!
  fullName: String!
  age: Int!
}

type Department {
  id: ID!
  title: String!
  leaderUser: User
  isDefault: Boolean!
  createdAt: String!
  updatedAt: String!
}

type Rank {
  id: ID!
  title: String!
  isDefault: Boolean!
  createdAt: String!
  updatedAt: String!
}

type Salary {
  id: ID!
  user: User!
  basePay: Int!
  allowance: Int!
  createdAt: String!
  updatedAt: String!
}

type CommuteTime {
  id: ID!
  user: User!
  workString: String!
  offWorkString: String!
  createdAt: String!
  updatedAt: String!
}

type Chat {
  id: ID!
  participants: [User!]!
  messages: [Message!]!
  createdAt: String!
  updatedAt: String!
}

type Message {
  id: ID!
  chat: Chat!
  from: User!
  to: User!
  text: String!
  createdAt: String!
  updatedAt: String!
}

type Mail {
  id: ID!
  from: User!
  to: User!
  subject: String!
  content: String!
  isRead: Boolean!
  createdAt: String!
  updatedAt: String!
}

type Category {
  id: ID!
  title: String!
  parentCategory: Category
  type: Int!
  tasks: [Task!]
  createdAt: String!
  updatedAt: String!
}

type Task {
  id: ID!
  user: User!
  category: Category!
  beginDateTime: String!
  endDateTime: String!
  comment: String!
  keywords: [TaskKeyword!]
  createdAt: String!
  updatedAt: String!
}

type TaskKeyword {
  id: ID!
  title: String!
  createdAt: String!
  updatedAt: String!
}

type DocApproval {
  id: ID!
  state: String!
  drafter: User!
  currentApprover: Approver!
  approvers: [Approver!]!
  reviewers: [User!]
  subject: String!
  content: String!
  comment: String
  rejectReason: String
  createdAt: String!
  updatedAt: String!
}

type Approver {
  id: ID!
  approver: User!
  nextApprover: Approver
  isPass: Boolean!
  approveDate: String!
  createdAt: String!
  updatedAt: String!
}

type DailyJournal {
  id: ID!
  user: User!
  tasks: [Task!]
  createdAt: String!
  updatedAt: String!
}
