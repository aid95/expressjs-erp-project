type User {
  id: ID! @id
  email: String! @unique
  username: String! @unique
  password: String!
  firstName: String!
  lastName: String!
  address: String!
  addressDetail: String!
  birthDay: DateTime!
  department: Department @relation(name: "UserDept")
  rank: Rank
  chats: [Chat!]!
  basePay: Int @default(value: 42000000)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  isDelete: Boolean @default(value: false)
  loggedInAt: DateTime
}

type Department {
  id: ID! @id
  title: String! @unique
  leaderUser: User @relation(name: "Leader")
  isDefault: Boolean! @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Rank {
  id: ID! @id
  title: String! @unique
  isDefault: Boolean! @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Salary {
  id: ID! @id
  user: User
  dayShiftAmount: Int!
  nightShiftAmount: Int!
  overtimeAmount: Int!
  holidayAmount: Int!
  nationalPension: Int!
  healthInsurance: Int!
  employmentInsurance: Int!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type CommuteTime {
  id: ID! @id
  user: User
  workDateTime: DateTime!
  offWorkDateTime: DateTime!
  workTime: Float!
  overWorkTime: Float!
  nightShiftTime: Float!
  isHoliday: Boolean! @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Chat {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message {
  id: ID! @id
  chat: Chat!
  from: User! @relation(name: "MessageFrom")
  text: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Mail {
  id: ID! @id
  from: User @relation(name: "MailFrom")
  to: User @relation(name: "MailTo")
  subject: String!
  content: String!
  isRead: Boolean! @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Category {
  id: ID! @id
  title: String! @unique
  parentCategory: Category
  type: Int!
  tasks: [Task!]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Task {
  id: ID! @id
  user: User
  category: Category!
  beginDateTime: DateTime!
  endDateTime: DateTime!
  comment: String!
  keywords: [TaskKeyword!]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type TaskKeyword {
  id: ID! @id
  title: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type DocApproval {
  id: ID! @id
  state: String! @default(value: "PENDING")
  drafter: User @relation(name: "Drafter")
  currentApprover: Approver! @relation(name: "CurrentApprover")
  approvers: [Approver!]! @relation(name: "Approvers")
  reviewers: [User!] @relation(name: "Reviewers")
  subject: String!
  content: String!
  comment: String
  rejectReason: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Approver {
  id: ID! @id
  approver: User
  nextApprover: Approver
  isPass: Boolean! @default(value: false)
  approveDate: DateTime
  acceptComment: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type DailyJournal {
  id: ID! @id
  user: User!
  tasks: [Task!]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
